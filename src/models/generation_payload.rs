/*
 * Stable Horde
 *
 * The API documentation for the Stable Horde
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GenerationPayload {
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<Box<crate::models::ModelPayloadStable>>,
    /// The UUID for this image generation
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "skipped", skip_serializing_if = "Option::is_none")]
    pub skipped: Option<Box<crate::models::NoValidRequestFoundStable>>,
    /// Which of the available models to use for this request
    #[serde(rename = "model", skip_serializing_if = "Option::is_none")]
    pub model: Option<String>,
    /// The Base64-encoded webp to use for img2img
    #[serde(rename = "source_image", skip_serializing_if = "Option::is_none")]
    pub source_image: Option<String>,
}

impl GenerationPayload {
    pub fn new() -> GenerationPayload {
        GenerationPayload {
            payload: None,
            id: None,
            skipped: None,
            model: None,
            source_image: None,
        }
    }
}


