/*
 * Stable Horde
 *
 * The API documentation for the Stable Horde
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PutUserSingleRequest {
    #[serde(rename = "kudos", skip_serializing_if = "Option::is_none")]
    pub kudos: Option<i32>,
    #[serde(rename = "concurrency", skip_serializing_if = "Option::is_none")]
    pub concurrency: Option<i32>,
    #[serde(rename = "usage_multiplier", skip_serializing_if = "Option::is_none")]
    pub usage_multiplier: Option<f32>,
    #[serde(rename = "worker_invite", skip_serializing_if = "Option::is_none")]
    pub worker_invite: Option<i32>,
    #[serde(rename = "moderator", skip_serializing_if = "Option::is_none")]
    pub moderator: Option<bool>,
    #[serde(rename = "public_workers", skip_serializing_if = "Option::is_none")]
    pub public_workers: Option<bool>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "monthly_kudos", skip_serializing_if = "Option::is_none")]
    pub monthly_kudos: Option<i32>,
    #[serde(rename = "trusted", skip_serializing_if = "Option::is_none")]
    pub trusted: Option<bool>,
}

impl PutUserSingleRequest {
    pub fn new() -> PutUserSingleRequest {
        PutUserSingleRequest {
            kudos: None,
            concurrency: None,
            usage_multiplier: None,
            worker_invite: None,
            moderator: None,
            public_workers: None,
            username: None,
            monthly_kudos: None,
            trusted: None,
        }
    }
}


